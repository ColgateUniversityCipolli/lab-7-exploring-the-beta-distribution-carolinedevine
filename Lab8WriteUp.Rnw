\documentclass{article}
\usepackage{amsmath} %This allows me to use the align functionality.
                     %If you find yourself trying to replicate
                     %something you found online, ensure you're
                     %loading the necessary packages!
\usepackage{amsfonts}%Math font
\usepackage{graphicx}%For including graphics
\usepackage{hyperref}%For Hyperlinks
\usepackage[shortlabels]{enumitem}% For enumerated lists with labels specified
                                  % We had to run tlmgr_install("enumitem") in R
\hypersetup{colorlinks = true,citecolor=black} %set citations to have black (not green) color
\usepackage{natbib}        %For the bibliography
\setlength{\bibsep}{0pt plus 0.3ex}
\bibliographystyle{apalike}%For the bibliography
\usepackage[margin=0.50in]{geometry}
\usepackage{float}
\usepackage{multicol}

%fix for figures
\usepackage{caption}
\newenvironment{Figure}
  {\par\medskip\noindent\minipage{\linewidth}}
  {\endminipage\par\medskip}
\begin{document}

\vspace{-1in}
\title{Lab 7 and 8 -- MATH 240 -- Computational Statistics}

\author{
  Caroline Devine \\
  Colgate University  \\
  Math Department  \\
  {\tt cdevine@colgate.edu}
}

\date{April 1st, 2025}

\maketitle

\begin{multicols}{2}
\begin{abstract}
This document provides a basic template for the 2-page labs we will complete each week. Here, briefly summarize what you did and why it might be helpful. Provide all the top-line conclusions, but avoid providing \emph{all} the details. Results should be limited to ``we show X, Y, and Z."
\end{abstract}

\noindent \textbf{Keywords:} What topics does the lab cover concerning class? List 3-4 key terms here, separated by semicolons.

\section{Introduction}



\section{Density Functions and Parameters}
\textbf{ADD PDF of beta}
\textbf{ADD parameters}

To explore the beta distribution, we focused on four cases: \(\text{Beta}(\alpha = 2, \beta = 5)\), \(\text{Beta}(\alpha = 5, \beta = 5)\), \(\text{Beta}(\alpha = 5, \beta = 2)\), and \(\text{Beta}(\alpha = 0.5, \beta = 0.5)\). We calculated the population-level characteristics(mean, variance, skewness, and excess kurtosis) for all four cases by deriving the formulas and numerically analyzing them for each case (Summarized in Table 1). 

<<echo=FALSE, eval=TRUE, results="asis", message=FALSE, warning=FALSE, size='scriptsize'>>=
################################################################################
# Task 1: Describe The Population Distribution
################################################################################
library(tidyverse)
library(patchwork)
library(xtable)

# Goal: Plot 4 distributions, compute mean, variance, skewness, and kurtosis
# for all 4 cases
# Write a function for efficiency

beta.pop.distribution <- function(alpha, beta){
  beta.distribution <- data.frame(
    Alpha = alpha,
    Beta = beta,
    mean = alpha/(alpha+beta),
    variance = (alpha*beta)/((alpha + beta)^2 * (alpha + beta + 1)),
    skewness = (2*(beta - alpha)*sqrt(alpha + beta +1))/((alpha + beta + 2)*sqrt(alpha*beta)),
    kurtosis = ( 6 * ((alpha-beta)^2 * (alpha + beta + 1) - ((alpha*beta)*(alpha+beta+2))))/
      ((alpha*beta)*(alpha + beta + 2)*(alpha + beta +3))
  )
  return(beta.distribution)
}

table.results <- bind_rows(
  beta.pop.distribution(2,5),
  beta.pop.distribution(5,5),
  beta.pop.distribution(5,2),
  beta.pop.distribution(0.5,0.5)
)
view(table.results)

# Table with Values
table <- xtable(table.results,
                caption = "Population-Level Summary by Case", 
                label = "Table 1")  # for LaTeX
@

<<echo=FALSE, eval=TRUE, results="asis">>=
print(table,
      table.placement = "H", 
      include.rownames = FALSE, 
      size = "small", 
      caption.placement = "bottom")
@
To visually see the distribution, all four cases are plotted in Figure 1. The \(\text{Beta}(\alpha = 2, \beta = 5)\) distribution is right-skewed, the \(\text{Beta}(\alpha = 5, \beta = 5)\) is symmetric, the \(\text{Beta}(\alpha = 5, \beta = 2)\) is left-skewed, and the \(\text{Beta}(\alpha = 0.5, \beta = 0.5)\) is u-shaped indicating majority of the distribution is close to 0 or 1. We can see from Figure 1 that when \(\alpha\) \(<\) \(\beta\), it is right-skewed; when \(\alpha\) \(>\) \(\beta\), it is left-skewed; when \(\alpha\)  = \(\beta\), it is symmetric. 

\section{Properties}
The beta distribution includes many important properties such as mean, variance, skewness, and excess kurtosis. These values were calculated for all four cases using provided formulas from beta distribution (Table \ref{Table 1}). To compare the results, the moments of the beta distribution were calculated directly using numerical integration. Our function, \texttt{beta.moment()}, calculated both the centered and uncentered moments, summarizing the same characteristics as in Table \ref{Table 1}. This process resulted in values that match the theoretical values from Table \ref{Table 1} and can be seen in Table \ref{Table 2} in Appendix. 

Since the goal of summarizing this data is to approximate what the population distribution might be, we further analyze how different sample sizes effect the sample estimates. Initially randomly selecting sample sizes of \texttt{n} = 500 from the beta distribution, histograms for each sample with estimated density and true PDF were plotted (Figure \ref{plot2}) accompanied by a numerical summary (Table \ref{Table 3}). Comparing numerical summaries and plots from sample to Table \ref{Table 1}, confirms that the sample estimates the approximate theoretical values. 


\section{Estimators}

\section{Example}

\section{Discussion}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Bibliography
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\vspace{2em}

\noindent\textbf{Bibliography:} Note that when you add citations to your bib.bib file \emph{and}
you cite them in your document, the bibliography section will automatically populate here.

\begin{tiny}
\bibliography{bib}
\end{tiny}
\end{multicols}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Appendix
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newpage
\onecolumn
\section{Appendix}
<<plot1, echo=FALSE, eval=TRUE, message=FALSE, warning=FALSE, size='scriptsize'>>=
# Plot the 4 Distributions
# Beta(2,5)
figure.data.1 <- tibble(x = seq(-0.25, 1.25, length.out=1000))|>
    mutate(beta.pdf = dbeta(x, 2, 5))
  
plot1 <- ggplot(data = figure.data.1)+
          geom_line(aes(x=x, y=beta.pdf, color="Beta(2,5)")) +      
          geom_hline(yintercept=0)+                            
          theme_bw()+                                          
          xlab("x")+                                            
          ylab("Density")+                                      
          scale_color_manual("", values = c("black", "grey"))+         
          theme(legend.position = "bottom") 

# Beta(5,5)
figure.data.2 <- tibble(x = seq(-0.25, 1.25, length.out=1000))|>
  mutate(beta.pdf = dbeta(x, 5, 5))

plot2 <- ggplot(data = figure.data.2)+
  geom_line(aes(x=x, y=beta.pdf, color="Beta(5,5)")) +      
  geom_hline(yintercept=0)+                                            
  theme_bw()+                                                          
  xlab("x")+                                                           
  ylab("Density")+                                                     
  scale_color_manual("", values = c("black", "grey"))+                 
  theme(legend.position = "bottom") 

# Beta(5,2)
figure.data.3 <- tibble(x = seq(-0.25, 1.25, length.out=1000))|>
  mutate(beta.pdf = dbeta(x, 5, 2))

plot3 <- ggplot(data = figure.data.3)+
  geom_line(aes(x=x, y=beta.pdf, color="Beta(5,2)")) +      
  geom_hline(yintercept=0)+                                            
  theme_bw()+                                                          
  xlab("x")+                                                           
  ylab("Density")+                                                     
  scale_color_manual("", values = c("black", "grey"))+                 
  theme(legend.position = "bottom") 

# Beta(0.5,0.5)
figure.data.4 <- tibble(x = seq(-0.25, 1.25, length.out=1000))|>
  mutate(beta.pdf = dbeta(x, 0.5, 0.5))

plot4 <- ggplot(data = figure.data.4)+
  geom_line(aes(x=x, y=beta.pdf, color="Beta(0.5,0.5)")) +      
  geom_hline(yintercept=0)+                                           
  theme_bw()+                                                         
  xlab("x")+                                                           
  ylab("Density")+                                                     
  scale_color_manual("", values = c("black", "grey"))+                
  theme(legend.position = "bottom") 

# Combined Plot of 4 Distributions
four.case.plot <- plot1+plot2+plot3+plot4
@
\begin{figure}[H]
\begin{center}
<<echo=FALSE, warning=FALSE, message=FALSE, fig.dim=c(5,3.5)>>=
four.case.plot
@
\caption{Population Distribution Plot by Case}
\label{plot1} 
\end{center}
\end{figure}


<<echo=FALSE, eval=TRUE, results="asis", message=FALSE, warning=FALSE, size='scriptsize'>>=
################################################################################
# Task 2: Compute the Moments
################################################################################

#
beta.moment <- function(alpha, beta, k, centered){

  if (centered == T){
    mean <- alpha/(alpha+beta)
    centered.moment <- integrate(function(x) ((x-mean)^k)*dbeta(x, alpha, beta), 0, 1)$value
    return(centered.moment)
  }else{
    uncentered.moment <- integrate(function(x) ((x)^k)*dbeta(x, alpha, beta), 0, 1)$value
    return(uncentered.moment)
  }
}

# Moments Tested
beta.moment1 <- tibble(
    Alpha = 2,
    Beta = 5,
    mean = beta.moment(2,5,1,F),
    variance = beta.moment(2,5,2,T),
    skewness = (beta.moment(2,5,3,T) / 
              ((beta.moment(2,5,2,T))^(3/2))),
    excess.kurtosis = (beta.moment(2,5,4,T)/(beta.moment(2,5,2,T))^2)-3,
  )

beta.moment2 <- tibble(
  Alpha = 5,
  Beta = 5,
  mean = beta.moment(5,5,1,F),
  variance = beta.moment(5,5,2,T),
  skewness = (beta.moment(5,5,3,T) / 
                ((beta.moment(5,5,2,T))^(3/2))),
  excess.kurtosis = (beta.moment(5,5,4,T)/
                       (beta.moment(5,5,2,T))^2)-3,
)

beta.moment3 <- tibble(
  Alpha = 5,
  Beta = 2,
  mean = beta.moment(5,2,1,F),
  variance = beta.moment(5,2,2,T),
  skewness = (beta.moment(5,2,3,T) / 
                ((beta.moment(5,2,2,T))^(3/2))),
  excess.kurtosis = (beta.moment(5,2,4,T)/
                       (beta.moment(5,2,2,T))^2)-3,
)

beta.moment4 <- tibble(
  Alpha = 0.5,
  Beta = 0.5,
  mean = beta.moment(0.5,0.5,1,F),
  variance = beta.moment(0.5,0.5,2,T),
  skewness = (beta.moment(0.5,0.5,3,T) / 
                ((beta.moment(0.5,0.5,2,T))^(3/2))),
  excess.kurtosis = (beta.moment(0.5,0.5,4,T)/
                       (beta.moment(0.5,0.5,2,T))^2)-3,
)

confirmed.results <- bind_rows(
  beta.moment1,
  beta.moment2,
  beta.moment3,
  beta.moment4
)

# Table with Values
table2 <- xtable(confirmed.results,
                caption = "Moments Summary Table", 
                label = "Table 2")  # for LaTeX
@

<<echo=FALSE, eval=TRUE, results="asis">>=
print(table2,
      table.placement = "H", 
      include.rownames = FALSE, 
      size = "small", 
      caption.placement = "bottom")
@

<<plot2, echo=FALSE, eval=TRUE, message=FALSE, warning=FALSE, size='scriptsize'>>=
################################################################################
# Task 3: Do Data Summaries Help?
################################################################################
library(e1071)

# Beta(2,5)
set.seed(7272) # Set seed so we all get the same results.
sample.size <- 500 # Specify sample details
alpha <- 2
beta <- 5
beta.sample.1 <- rbeta(n = sample.size,  # sample size
                     shape1 = alpha,   # alpha parameter
                     shape2 = beta)    # beta parameter
fig1.data <-  tibble(x = seq(-0.25, 1.25, length.out=1000))|>   # generate a grid of points
  mutate(beta.pdf = dbeta(x, alpha, beta))

beta.sample.data.1 <- tibble(data = beta.sample.1)

sample.summary.1 <- beta.sample.data.1 |>
  summarize(
    Alpha = alpha,
    Beta = beta,
    mean = mean(data),
    variance = var(data),
    skewness = e1071::skewness(data),
    excess.kurtosis =  e1071::kurtosis(data)
  )

hist.1 <- ggplot()+
  geom_histogram(data = beta.sample.data.1,
                 aes(x = beta.sample.1, y = after_stat(density)),
                 breaks = seq(-0.5,1.2,0.1),
                 fill = "grey30",
                 color = "lightgray"
  ) + 
  geom_density(data = beta.sample.data.1,
               aes(x = beta.sample.1, color = "Sample Density"), show.legend = T)+
  geom_line(data = fig1.data,
            aes(x = x, y = beta.pdf, color = "Beta Distribution"), show.legend = T)+
  geom_hline(yintercept = 0) + 
  labs(color = "Line", title = "Beta(2,5)")

# Beta(5,5)
set.seed(7272) # Set seed so we all get the same results.
sample.size <- 500 # Specify sample details
alpha <- 5
beta <- 5
beta.sample.2 <- rbeta(n = sample.size,  # sample size
                       shape1 = alpha,   # alpha parameter
                       shape2 = beta)    # beta parameter
fig2.data <-  tibble(x = seq(-0.25, 1.25, length.out=1000))|>   # generate a grid of points
  mutate(beta.pdf = dbeta(x, alpha, beta))

beta.sample.data.2 <- tibble(data = beta.sample.2)

sample.summary.2 <- beta.sample.data.2 |>
  summarize(
    Alpha = alpha,
    Beta = beta,
    mean = mean(data),
    variance = var(data),
    skewness = e1071::skewness(data),
    excess.kurtosis =  e1071::kurtosis(data)
  )

hist.2 <- ggplot()+
  geom_histogram(data = beta.sample.data.2,
                 aes(x = beta.sample.2, y = after_stat(density)),
                 breaks = seq(-0.5,1.2,0.1),
                 fill = "grey30",
                 color = "lightgray"
  ) + 
  geom_density(data = beta.sample.data.2,
               aes(x = beta.sample.2, color = "Sample Density"), show.legend = T)+
  geom_line(data = fig2.data,
            aes(x = x, y = beta.pdf, color = "Beta Distribution"), show.legend = T)+
  geom_hline(yintercept = 0) + 
  labs(color = "Line", title = "Beta(5,5)")

# Beta(5,2)
set.seed(7272) # Set seed so we all get the same results.
sample.size <- 500 # Specify sample details
alpha <- 5
beta <- 2
beta.sample.3 <- rbeta(n = sample.size,  # sample size
                       shape1 = alpha,   # alpha parameter
                       shape2 = beta)    # beta parameter
fig3.data <-  tibble(x = seq(-0.25, 1.25, length.out=1000))|>   # generate a grid of points
  mutate(beta.pdf = dbeta(x, alpha, beta))

beta.sample.data.3 <- tibble(data = beta.sample.3)

sample.summary.3 <- beta.sample.data.3 |>
  summarize(
    Alpha = alpha,
    Beta = beta,
    mean = mean(data),
    variance = var(data),
    skewness = e1071::skewness(data),
    excess.kurtosis =  e1071::kurtosis(data)
  )

hist.3 <- ggplot()+
  geom_histogram(data = beta.sample.data.3,
                 aes(x = beta.sample.3, y = after_stat(density)),
                 breaks = seq(-0.5,1.2,0.1),
                 fill = "grey30",
                 color = "lightgray"
  ) + 
  geom_density(data = beta.sample.data.3,
               aes(x = beta.sample.3, color = "Sample Density"), show.legend = T)+
  geom_line(data = fig3.data,
            aes(x = x, y = beta.pdf, color = "Beta Distribution"), show.legend = T)+
  geom_hline(yintercept = 0) + 
  labs(color = "Line", title = "Beta(5,2)")

# Beta(0.5,0.5)
set.seed(7272) # Set seed so we all get the same results.
sample.size <- 500 # Specify sample details
alpha <- 0.5
beta <- 0.5
beta.sample.4 <- rbeta(n = sample.size,  # sample size
                       shape1 = alpha,   # alpha parameter
                       shape2 = beta)    # beta parameter
fig4.data <-  tibble(x = seq(-0.25, 1.25, length.out=1000))|>   # generate a grid of points
  mutate(beta.pdf = dbeta(x, alpha, beta))

beta.sample.data.4 <- tibble(data = beta.sample.4)

sample.summary.4 <- beta.sample.data.4 |>
  summarize(
    Alpha = alpha,
    Beta = beta,
    mean = mean(data),
    variance = var(data),
    skewness = e1071::skewness(data),
    excess.kurtosis =  e1071::kurtosis(data)
  )

hist.4 <- ggplot()+
  geom_histogram(data = beta.sample.data.4,
                 aes(x = beta.sample.4, y = after_stat(density)),
                 breaks = seq(-0.5,1.2,0.1),
                 fill = "grey30",
                 color = "lightgray"
  ) + 
  geom_density(data = beta.sample.data.4,
               aes(x = beta.sample.4, color = "Sample Density"), show.legend = T)+
  geom_line(data = fig4.data,
            aes(x = x, y = beta.pdf, color = "Beta Distribution"), show.legend = T)+
  geom_hline(yintercept = 0) + 
  labs(color = "Line", title = "Beta(0.5,0.5)")


# Combined Plot
sample.combined <- hist.1 + hist.2 + hist.3 + hist.4+ plot_layout(guides = "collect")

# Combined Summaries
sample.summary.results <- bind_rows(
  sample.summary.1,
  sample.summary.2,
  sample.summary.3,
  sample.summary.4
)
table3 <- xtable(confirmed.results,
                caption = "Sample Summary Table", 
                label = "Table 3")  # for LaTeX
@
\begin{figure}[H]
\begin{center}
<<echo=FALSE, warning=FALSE, message=FALSE, fig.dim=c(11,8.5), fig.align='center'>>=
sample.combined
@
\caption{Sample Plot by Four Beta Distributions}
\label{plot2} 
\end{center}
\end{figure}

<<echo=FALSE, eval=TRUE, results="asis">>=
print(table3,
      table.placement = "H", 
      include.rownames = FALSE, 
      size = "small", 
      caption.placement = "bottom")
@

\end{document}